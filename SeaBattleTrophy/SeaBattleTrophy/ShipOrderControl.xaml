<UserControl x:Class="SeaBattleTrophy.WPF.ShipOrderControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:SeaBattleTrophy.WPF"
             xmlns:viewmodels="clr-namespace:SeaBattleTrophy.WPF.ViewModels"
             xmlns:utilities="clr-namespace:Utilities;assembly=Utilities"
             xmlns:game="clr-namespace:SeaBattleTrophyGame;assembly=SeaBattleTrophyGame"
             xmlns:properties="clr-namespace:SeaBattleTrophy.WPF.Properties"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300"
             DataContextChanged="HandleDataContextChanged"
             d:DataContext="{d:DesignInstance viewmodels:ShipOrderViewModel}">
    <UserControl.Resources>
        <utilities:EnumToBooleanConverter x:Key="EnumToBoolConverter"/>
        <Style TargetType="{x:Type RadioButton}" BasedOn="{StaticResource {x:Type ToggleButton}}"/>

        <DataTemplate x:Key="YawMovementOrderTemplate" DataType="{x:Type game:YawMovementOrder}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition SharedSizeGroup="MovementListDirection" Width="Auto"/>
                    <ColumnDefinition SharedSizeGroup="MovementListDistance" Width="Auto"/>
                    <ColumnDefinition SharedSizeGroup="MovementListYawRadius" Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Label Grid.Column="0" Content="{Binding Direction}">
                    <Label.Style>
                        <Style TargetType="Label">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Direction}" Value="{x:Static game:Direction.Starboard}">
                                    <Setter Property="Content" Value="{x:Static properties:Strings.Starboard}"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Direction}" Value="{x:Static game:Direction.Port}">
                                    <Setter Property="Content" Value="{x:Static properties:Strings.Port}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Label.Style>
                </Label>
                <Label Grid.Column="1" Content="{Binding Distance}" />
                <Label Grid.Column="2" Content="{Binding YawRadius}" />
                <Grid Grid.Column="3">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Button IsEnabled="False" Grid.Column="0" Content="{x:Static properties:Strings.Up}"/>
                    <!--Buttons for future use-->
                    <Button IsEnabled="False" Grid.Column="1" Content="{x:Static properties:Strings.Down}"/>
                    <Button Grid.Column="2" Click="HandleRemoveMovementOrderButtonClicked" Content="{x:Static properties:Strings.Remove}"/>
                </Grid>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="ForwardMovementOrderTemplate" DataType="{x:Type game:YawMovementOrder}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition SharedSizeGroup="MovementListDirection" Width="Auto"/>
                    <ColumnDefinition SharedSizeGroup="MovementListDistance" Width="Auto"/>
                    <ColumnDefinition SharedSizeGroup="MovementListYawRadius" Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Label Grid.Column="0" Content="{x:Static properties:Strings.Forward}" />
                <Label Grid.Column="1" Content="{Binding Distance}" />
                <Label Grid.Column="2" Content="-" />
                <Grid Grid.Column="3">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Button IsEnabled="False" Grid.Column="0" Content="{x:Static properties:Strings.Up}"/>
                    <!--Buttons for future use-->
                    <Button IsEnabled="False" Grid.Column="1" Content="{x:Static properties:Strings.Down}"/>
                    <Button Grid.Column="2" Click="HandleRemoveMovementOrderButtonClicked" Content="{x:Static properties:Strings.Remove}"/>
                </Grid>
            </Grid>
        </DataTemplate>

        <local:MovementOrderTemplateSelector x:Key="MovementOrderTemplateSelector"
            ForwardMovementOrderTemplate="{StaticResource ForwardMovementOrderTemplate}"
            YawMovementOrderTemplate="{StaticResource YawMovementOrderTemplate}" />
    </UserControl.Resources>
    <StackPanel Width="300" Background="Gray">
        <Grid Margin="5">
            <ProgressBar Height="80" Maximum="{Binding CurrentMaxSpeed}" Value="{Binding CurrentDistanceRemaining, Mode=OneWay}" />
            <Label Content="{Binding CurrentMaxSpeed}" HorizontalAlignment="Center" VerticalAlignment="Center" />
        </Grid>
        <StackPanel Grid.IsSharedSizeScope="True" IsEnabled="{Binding AnyDistanceRemaining}">
            <local:MovementOrderControl Label="{x:Static properties:Strings.Forward}" 
                                        MinDistance="0" MaxDistance="{Binding CurrentDistanceRemaining}"
                                        OrderAdded="HandleForwardMovementOrderAdded"/>

            <local:MovementOrderControl  Label="{x:Static properties:Strings.Port}" 
                                        MinDistance="0" MaxDistance="{Binding CurrentDistanceRemaining}"
                                        OrderAdded="HandlePortMovementOrderAdded"/>

            <local:MovementOrderControl Label="{x:Static properties:Strings.Starboard}" 
                                        MinDistance="0" MaxDistance="{Binding CurrentDistanceRemaining}"
                                        OrderAdded="HandleStarboardMovementOrderAdded"/>
        </StackPanel>
        <ListView MinHeight="160" Margin="5" ItemsSource="{Binding CurrentMovementOrders}" ItemTemplateSelector="{StaticResource MovementOrderTemplateSelector}" Grid.IsSharedSizeScope="True"/>

        <Grid Margin="5">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <RadioButton Grid.Column="0" IsChecked="{Binding RequestedSailLevelChange, Converter={StaticResource EnumToBoolConverter}, 
                ConverterParameter={x:Static game:SailLevelChange.DecreaseSailLevel}}" Content="{x:Static properties:Strings.DecreaseSailLevel}" />
            <RadioButton Grid.Column="1" IsChecked="{Binding RequestedSailLevelChange, Converter={StaticResource EnumToBoolConverter}, 
                ConverterParameter={x:Static game:SailLevelChange.StayAtCurrentSailSpeed}}" Content="{x:Static properties:Strings.KeepSailLevel}" />
            <RadioButton Grid.Column="2" IsChecked="{Binding RequestedSailLevelChange, Converter={StaticResource EnumToBoolConverter}, 
                ConverterParameter={x:Static game:SailLevelChange.IncreaseSailLevel}}"  Content="{x:Static properties:Strings.IncreaseSailLevel}"/>
        </Grid>
        <Button Height="30" Click="SendOrderButtonClicked" IsEnabled="{Binding AreShipOrdersReadyToSend}" Margin="5" Content="{x:Static properties:Strings.SendOrders}"/>
    </StackPanel>
</UserControl>
